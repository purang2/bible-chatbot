{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eunch\\\\bible-chatbot\\\\frontend\\\\src\\\\components\\\\Chatbot.js\",\n  _s = $RefreshSig$();\n// Chatbot.js\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./Chatbot.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst botProfile = process.env.PUBLIC_URL + \"/bot-avatar.png\";\nconst userProfile = process.env.PUBLIC_URL + \"/user-avatar.png\";\nconst categories = {\n  relationships: {\n    title: \"인간관계\",\n    questions: [\"가족과의 갈등을 어떻게 풀어야 할까요?\", \"친구관계에서 상처받았을 때는 어떻게 해야 할까요?\", \"대인관계가 어려울 때 어떻게 해야 할까요?\", \"용서하는 것이 어려울 때는 어떻게 해야 할까요?\"]\n  },\n  faith: {\n    title: \"신앙생활\",\n    questions: [\"기도는 어떻게 하면 좋을까요?\", \"성경 읽기가 어려워요.\", \"예배생활이 게을러졌어요.\", \"하나님의 뜻을 어떻게 알 수 있을까요?\"]\n  },\n  life: {\n    title: \"일상과 결정\",\n    questions: [\"중요한 결정을 앞두고 있어요.\", \"미래가 불안해요.\", \"습관을 바꾸고 싶어요.\", \"스트레스 관리가 필요해요.\"]\n  }\n};\nconst initialMessage = {\n  id: \"welcome\",\n  text: \"안녕하세요! 성경과 삶에 대해 함께 이야기 나누어요. 어떤 주제에 관심이 있으신가요?\",\n  sender: \"bot\"\n};\n\n// 성경 구절을 파싱하는 함수\nconst parseScriptureVerses = text => {\n  const verses = [];\n  const pattern = /\\((\\d+)\\)\\s+([^-]+)-\\s*\"([^\"]+)\"/g;\n  let match;\n  while ((match = pattern.exec(text)) !== null) {\n    verses.push({\n      index: match[1],\n      reference: match[2].trim(),\n      content: match[3].trim()\n    });\n  }\n\n  // 원본 텍스트에서 성경 구절 부분을 제거\n  const mainText = text.split(\"[추천 성경구절]\")[0].trim();\n  return {\n    mainText,\n    verses\n  };\n};\n\n// 성경 구절 컴포넌트\nconst ScriptureVerse = ({\n  verse\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"scripture-verse\",\n  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"scripture-header\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"scripture-number\",\n      children: verse.index\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"scripture-reference\",\n      children: verse.reference\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"scripture-content\",\n    children: [\"\\\"\", verse.content, \"\\\"\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 65,\n  columnNumber: 3\n}, this);\n_c = ScriptureVerse;\nconst Chatbot = () => {\n  _s();\n  const [messages, setMessages] = useState([initialMessage]);\n  const [input, setInput] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const chatEndRef = useRef(null);\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const scrollToBottom = () => {\n    if (chatEndRef.current) {\n      chatEndRef.current.scrollIntoView({\n        behavior: \"smooth\"\n      });\n    }\n  };\n  const formatResponse = async text => {\n    try {\n      const response = await fetch(\"http://localhost:5000/chat\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\"\n        },\n        body: JSON.stringify({\n          message: text\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || \"서버 오류가 발생했습니다.\");\n      }\n      const data = await response.json();\n      return data.message;\n    } catch (error) {\n      console.error(\"Error:\", error);\n      throw error;\n    }\n  };\n\n  // handleSend 함수도 다음과 같이 수정\n  const handleSend = async text => {\n    if (!text.trim()) return;\n    const newMessage = {\n      id: Date.now(),\n      text: text,\n      sender: \"user\"\n    };\n    setMessages(prev => [...prev, newMessage]);\n    setInput(\"\");\n    setIsLoading(true);\n    try {\n      const response = await formatResponse(text);\n      const botResponse = {\n        id: Date.now() + 1,\n        text: response,\n        sender: \"bot\"\n      };\n      setMessages(prev => [...prev, botResponse]);\n    } catch (error) {\n      const errorMessage = {\n        id: Date.now() + 1,\n        text: \"죄송합니다. 응답을 생성하는 중에 문제가 발생했습니다. 다시 시도해 주세요.\",\n        sender: \"bot\"\n      };\n      setMessages(prev => [...prev, errorMessage]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleCategorySelect = category => {\n    setSelectedCategory(category);\n    const message = {\n      id: Date.now(),\n      text: `${categories[category].title}에 대해 이야기 나누어 보아요.`,\n      sender: \"bot\"\n    };\n    setMessages(prev => [...prev, message]);\n  };\n  const renderMessage = message => {\n    const isBot = message.sender === \"bot\";\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `message ${message.sender}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-avatar\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: isBot ? botProfile : userProfile,\n          alt: `${isBot ? \"Bot\" : \"User\"} Avatar`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-content\",\n        children: message.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this)]\n    }, message.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this);\n  };\n  const renderSuggestions = () => {\n    if (selectedCategory) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-suggestions\",\n        children: categories[selectedCategory].questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"suggestion-button\",\n          onClick: () => handleSend(question),\n          children: question\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-suggestions\",\n      children: Object.entries(categories).map(([key, category]) => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"suggestion-button\",\n        onClick: () => handleCategorySelect(key),\n        children: category.title\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-profile\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: botProfile,\n          alt: \"Bot Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-text\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"\\uC131\\uACBD \\uCC57\\uBD07\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\uC131\\uACBD\\uACFC \\uC0B6\\uC758 \\uC774\\uC57C\\uAE30\\uB97C \\uB098\\uB220\\uC694\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages\",\n      children: [messages.map(renderMessage), renderSuggestions(), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-indicator\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            animationDelay: \"0.2s\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            animationDelay: \"0.4s\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: chatEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"chat-input\",\n        placeholder: \"\\uBA54\\uC2DC\\uC9C0\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694...\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onKeyPress: e => {\n          if (e.key === \"Enter\" && !e.shiftKey) {\n            e.preventDefault();\n            handleSend(input);\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"send-button\",\n        onClick: () => handleSend(input),\n        disabled: isLoading || !input.trim(),\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          width: \"20\",\n          height: \"20\",\n          viewBox: \"0 0 24 24\",\n          fill: \"none\",\n          stroke: \"currentColor\",\n          strokeWidth: \"2\",\n          strokeLinecap: \"round\",\n          strokeLinejoin: \"round\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M22 2L11 13M22 2l-7 20-4-9-9-4 20-7z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 207,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"ft4Yy4KONaoKLMcRG4Rjw3w8g9M=\");\n_c2 = Chatbot;\nexport default Chatbot;\nvar _c, _c2;\n$RefreshReg$(_c, \"ScriptureVerse\");\n$RefreshReg$(_c2, \"Chatbot\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","botProfile","process","env","PUBLIC_URL","userProfile","categories","relationships","title","questions","faith","life","initialMessage","id","text","sender","parseScriptureVerses","verses","pattern","match","exec","push","index","reference","trim","content","mainText","split","ScriptureVerse","verse","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Chatbot","_s","messages","setMessages","input","setInput","isLoading","setIsLoading","selectedCategory","setSelectedCategory","chatEndRef","scrollToBottom","current","scrollIntoView","behavior","formatResponse","response","fetch","method","headers","Accept","body","JSON","stringify","message","ok","errorData","json","Error","data","error","console","handleSend","newMessage","Date","now","prev","botResponse","errorMessage","handleCategorySelect","category","renderMessage","isBot","src","alt","renderSuggestions","map","question","onClick","Object","entries","key","style","animationDelay","ref","type","placeholder","value","onChange","e","target","onKeyPress","shiftKey","preventDefault","disabled","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","_c2","$RefreshReg$"],"sources":["C:/Users/eunch/bible-chatbot/frontend/src/components/Chatbot.js"],"sourcesContent":["// Chatbot.js\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport \"./Chatbot.css\";\r\n\r\nconst botProfile = process.env.PUBLIC_URL + \"/bot-avatar.png\";\r\nconst userProfile = process.env.PUBLIC_URL + \"/user-avatar.png\";\r\n\r\nconst categories = {\r\n  relationships: {\r\n    title: \"인간관계\",\r\n    questions: [\r\n      \"가족과의 갈등을 어떻게 풀어야 할까요?\",\r\n      \"친구관계에서 상처받았을 때는 어떻게 해야 할까요?\",\r\n      \"대인관계가 어려울 때 어떻게 해야 할까요?\",\r\n      \"용서하는 것이 어려울 때는 어떻게 해야 할까요?\",\r\n    ],\r\n  },\r\n  faith: {\r\n    title: \"신앙생활\",\r\n    questions: [\r\n      \"기도는 어떻게 하면 좋을까요?\",\r\n      \"성경 읽기가 어려워요.\",\r\n      \"예배생활이 게을러졌어요.\",\r\n      \"하나님의 뜻을 어떻게 알 수 있을까요?\",\r\n    ],\r\n  },\r\n  life: {\r\n    title: \"일상과 결정\",\r\n    questions: [\r\n      \"중요한 결정을 앞두고 있어요.\",\r\n      \"미래가 불안해요.\",\r\n      \"습관을 바꾸고 싶어요.\",\r\n      \"스트레스 관리가 필요해요.\",\r\n    ],\r\n  },\r\n};\r\n\r\nconst initialMessage = {\r\n  id: \"welcome\",\r\n  text: \"안녕하세요! 성경과 삶에 대해 함께 이야기 나누어요. 어떤 주제에 관심이 있으신가요?\",\r\n  sender: \"bot\",\r\n};\r\n\r\n// 성경 구절을 파싱하는 함수\r\nconst parseScriptureVerses = (text) => {\r\n  const verses = [];\r\n  const pattern = /\\((\\d+)\\)\\s+([^-]+)-\\s*\"([^\"]+)\"/g;\r\n  let match;\r\n\r\n  while ((match = pattern.exec(text)) !== null) {\r\n    verses.push({\r\n      index: match[1],\r\n      reference: match[2].trim(),\r\n      content: match[3].trim(),\r\n    });\r\n  }\r\n\r\n  // 원본 텍스트에서 성경 구절 부분을 제거\r\n  const mainText = text.split(\"[추천 성경구절]\")[0].trim();\r\n  return { mainText, verses };\r\n};\r\n\r\n// 성경 구절 컴포넌트\r\nconst ScriptureVerse = ({ verse }) => (\r\n  <div className=\"scripture-verse\">\r\n    <div className=\"scripture-header\">\r\n      <span className=\"scripture-number\">{verse.index}</span>\r\n      <span className=\"scripture-reference\">{verse.reference}</span>\r\n    </div>\r\n    <div className=\"scripture-content\">\"{verse.content}\"</div>\r\n  </div>\r\n);\r\n\r\nconst Chatbot = () => {\r\n  const [messages, setMessages] = useState([initialMessage]);\r\n  const [input, setInput] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [selectedCategory, setSelectedCategory] = useState(null);\r\n  const chatEndRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  const scrollToBottom = () => {\r\n    if (chatEndRef.current) {\r\n      chatEndRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n    }\r\n  };\r\n\r\n  const formatResponse = async (text) => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/chat\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Accept: \"application/json\",\r\n        },\r\n        body: JSON.stringify({ message: text }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.message || \"서버 오류가 발생했습니다.\");\r\n      }\r\n\r\n      const data = await response.json();\r\n      return data.message;\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // handleSend 함수도 다음과 같이 수정\r\n  const handleSend = async (text) => {\r\n    if (!text.trim()) return;\r\n\r\n    const newMessage = {\r\n      id: Date.now(),\r\n      text: text,\r\n      sender: \"user\",\r\n    };\r\n\r\n    setMessages((prev) => [...prev, newMessage]);\r\n    setInput(\"\");\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      const response = await formatResponse(text);\r\n      const botResponse = {\r\n        id: Date.now() + 1,\r\n        text: response,\r\n        sender: \"bot\",\r\n      };\r\n      setMessages((prev) => [...prev, botResponse]);\r\n    } catch (error) {\r\n      const errorMessage = {\r\n        id: Date.now() + 1,\r\n        text: \"죄송합니다. 응답을 생성하는 중에 문제가 발생했습니다. 다시 시도해 주세요.\",\r\n        sender: \"bot\",\r\n      };\r\n      setMessages((prev) => [...prev, errorMessage]);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleCategorySelect = (category) => {\r\n    setSelectedCategory(category);\r\n    const message = {\r\n      id: Date.now(),\r\n      text: `${categories[category].title}에 대해 이야기 나누어 보아요.`,\r\n      sender: \"bot\",\r\n    };\r\n    setMessages((prev) => [...prev, message]);\r\n  };\r\n\r\n  const renderMessage = (message) => {\r\n    const isBot = message.sender === \"bot\";\r\n    return (\r\n      <div key={message.id} className={`message ${message.sender}`}>\r\n        <div className=\"message-avatar\">\r\n          <img\r\n            src={isBot ? botProfile : userProfile}\r\n            alt={`${isBot ? \"Bot\" : \"User\"} Avatar`}\r\n          />\r\n        </div>\r\n        <div className=\"message-content\">{message.text}</div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderSuggestions = () => {\r\n    if (selectedCategory) {\r\n      return (\r\n        <div className=\"question-suggestions\">\r\n          {categories[selectedCategory].questions.map((question, index) => (\r\n            <button\r\n              key={index}\r\n              className=\"suggestion-button\"\r\n              onClick={() => handleSend(question)}\r\n            >\r\n              {question}\r\n            </button>\r\n          ))}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"question-suggestions\">\r\n        {Object.entries(categories).map(([key, category]) => (\r\n          <button\r\n            key={key}\r\n            className=\"suggestion-button\"\r\n            onClick={() => handleCategorySelect(key)}\r\n          >\r\n            {category.title}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-container\">\r\n      <div className=\"chat-header\">\r\n        <div className=\"header-profile\">\r\n          <img src={botProfile} alt=\"Bot Profile\" />\r\n        </div>\r\n        <div className=\"header-text\">\r\n          <h1>성경 챗봇</h1>\r\n          <p>성경과 삶의 이야기를 나눠요</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"chat-messages\">\r\n        {messages.map(renderMessage)}\r\n        {renderSuggestions()}\r\n        {isLoading && (\r\n          <div className=\"loading-indicator\">\r\n            <span></span>\r\n            <span style={{ animationDelay: \"0.2s\" }}></span>\r\n            <span style={{ animationDelay: \"0.4s\" }}></span>\r\n          </div>\r\n        )}\r\n        <div ref={chatEndRef} />\r\n      </div>\r\n\r\n      <div className=\"chat-input-container\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"chat-input\"\r\n          placeholder=\"메시지를 입력하세요...\"\r\n          value={input}\r\n          onChange={(e) => setInput(e.target.value)}\r\n          onKeyPress={(e) => {\r\n            if (e.key === \"Enter\" && !e.shiftKey) {\r\n              e.preventDefault();\r\n              handleSend(input);\r\n            }\r\n          }}\r\n        />\r\n        <button\r\n          className=\"send-button\"\r\n          onClick={() => handleSend(input)}\r\n          disabled={isLoading || !input.trim()}\r\n        >\r\n          <svg\r\n            width=\"20\"\r\n            height=\"20\"\r\n            viewBox=\"0 0 24 24\"\r\n            fill=\"none\"\r\n            stroke=\"currentColor\"\r\n            strokeWidth=\"2\"\r\n            strokeLinecap=\"round\"\r\n            strokeLinejoin=\"round\"\r\n          >\r\n            <path d=\"M22 2L11 13M22 2l-7 20-4-9-9-4 20-7z\" />\r\n          </svg>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chatbot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}