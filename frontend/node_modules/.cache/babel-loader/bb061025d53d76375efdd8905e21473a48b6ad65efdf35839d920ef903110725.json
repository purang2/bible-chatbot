{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eunch\\\\bible-chatbot\\\\frontend\\\\src\\\\components\\\\Chatbot.js\",\n  _s = $RefreshSig$();\n// Chatbot.js\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./Chatbot.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst botProfile = process.env.PUBLIC_URL + \"/bot-avatar.png\";\nconst userProfile = process.env.PUBLIC_URL + \"/user-avatar.png\";\nconst categories = {\n  relationships: {\n    title: \"인간관계\",\n    questions: [\"가족과의 갈등을 어떻게 풀어야 할까요?\", \"친구관계에서 상처받았을 때는 어떻게 해야 할까요?\", \"대인관계가 어려울 때 어떻게 해야 할까요?\", \"용서하는 것이 어려울 때는 어떻게 해야 할까요?\"]\n  },\n  faith: {\n    title: \"신앙생활\",\n    questions: [\"기도는 어떻게 하면 좋을까요?\", \"성경 읽기가 어려워요.\", \"예배생활이 게을러졌어요.\", \"하나님의 뜻을 어떻게 알 수 있을까요?\"]\n  },\n  life: {\n    title: \"일상과 결정\",\n    questions: [\"중요한 결정을 앞두고 있어요.\", \"미래가 불안해요.\", \"습관을 바꾸고 싶어요.\", \"스트레스 관리가 필요해요.\"]\n  }\n};\nconst initialMessage = {\n  id: \"welcome\",\n  text: \"안녕하세요! 성경과 삶에 대해 함께 이야기 나누어요. 어떤 주제에 관심이 있으신가요?\",\n  sender: \"bot\"\n};\nconst Chatbot = () => {\n  _s();\n  const [messages, setMessages] = useState([{\n    id: \"welcome\",\n    text: \"안녕하세요! 성경과 삶에 대해 이야기 나누어요. 무엇이든 물어보세요!\",\n    sender: \"bot\"\n  }]);\n  const [input, setInput] = useState(\"\");\n  const chatEndRef = useRef(null);\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const scrollToBottom = () => {\n    if (chatEndRef.current) {\n      chatEndRef.current.scrollIntoView({\n        behavior: \"smooth\"\n      });\n    }\n  };\n  const formatResponse = async text => {\n    try {\n      const response = await fetch(\"http://localhost:5000/chat\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\"\n        },\n        body: JSON.stringify({\n          message: text\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || \"서버 오류가 발생했습니다.\");\n      }\n      const data = await response.json();\n      return data.message;\n    } catch (error) {\n      console.error(\"Error:\", error);\n      throw error;\n    }\n  };\n  const handleSend = async text => {\n    if (!text.trim()) return;\n    const userMessage = {\n      id: Date.now(),\n      text,\n      sender: \"user\"\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setInput(\"\");\n\n    // 🚀 서버 요청 (실제 API 연동)\n    try {\n      const response = await fetch(\"http://localhost:5000/chat\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          message: text\n        })\n      });\n      const data = await response.json();\n      const botMessage = {\n        id: Date.now() + 1,\n        text: data.message,\n        sender: \"bot\"\n      };\n      setMessages(prev => [...prev, botMessage]);\n\n      // ✅ 성경 구절을 개별 메시지로 분리하여 추가\n      if (data.bibleVerses) {\n        data.bibleVerses.forEach((verse, index) => {\n          setMessages(prev => [...prev, {\n            id: Date.now() + index + 2,\n            text: verse,\n            sender: \"bot\",\n            isBibleVerse: true\n          }]);\n        });\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n      const errorMessage = {\n        id: Date.now() + 1,\n        text: \"서버 오류가 발생했습니다. 다시 시도해 주세요.\",\n        sender: \"bot\"\n      };\n      setMessages(prev => [...prev, errorMessage]);\n    }\n  };\n  const handleCategorySelect = category => {\n    setSelectedCategory(category);\n    const message = {\n      id: Date.now(),\n      text: `${categories[category].title}에 대해 이야기 나누어 보아요.`,\n      sender: \"bot\"\n    };\n    setMessages(prev => [...prev, message]);\n  };\n  const renderMessage = message => {\n    const isBot = message.sender === \"bot\";\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `message ${message.sender}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-avatar\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: isBot ? botProfile : userProfile,\n          alt: `${isBot ? \"Bot\" : \"User\"} Avatar`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-content\",\n        children: message.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)]\n    }, message.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this);\n  };\n  const renderSuggestions = () => {\n    if (selectedCategory) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-suggestions\",\n        children: categories[selectedCategory].questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"suggestion-button\",\n          onClick: () => handleSend(question),\n          children: question\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-suggestions\",\n      children: Object.entries(categories).map(([key, category]) => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"suggestion-button\",\n        onClick: () => handleCategorySelect(key),\n        children: category.title\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-profile\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: botProfile,\n          alt: \"Bot Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-text\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"\\uC131\\uACBD \\uCC57\\uBD07\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\uC131\\uACBD\\uACFC \\uC0B6\\uC758 \\uC774\\uC57C\\uAE30\\uB97C \\uB098\\uB220\\uC694\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages\",\n      children: [messages.map(renderMessage), renderSuggestions(), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-indicator\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            animationDelay: \"0.2s\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            animationDelay: \"0.4s\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: chatEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"chat-input\",\n        placeholder: \"\\uBA54\\uC2DC\\uC9C0\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694...\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onKeyPress: e => {\n          if (e.key === \"Enter\" && !e.shiftKey) {\n            e.preventDefault();\n            handleSend(input);\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"send-button\",\n        onClick: () => handleSend(input),\n        disabled: isLoading || !input.trim(),\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          width: \"20\",\n          height: \"20\",\n          viewBox: \"0 0 24 24\",\n          fill: \"none\",\n          stroke: \"currentColor\",\n          strokeWidth: \"2\",\n          strokeLinecap: \"round\",\n          strokeLinejoin: \"round\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M22 2L11 13M22 2l-7 20-4-9-9-4 20-7z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 197,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"JhDW1f3loZqbAK7xbkkHegrb72g=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","botProfile","process","env","PUBLIC_URL","userProfile","categories","relationships","title","questions","faith","life","initialMessage","id","text","sender","Chatbot","_s","messages","setMessages","input","setInput","chatEndRef","scrollToBottom","current","scrollIntoView","behavior","formatResponse","response","fetch","method","headers","Accept","body","JSON","stringify","message","ok","errorData","json","Error","data","error","console","handleSend","trim","userMessage","Date","now","prev","botMessage","bibleVerses","forEach","verse","index","isBibleVerse","errorMessage","handleCategorySelect","category","setSelectedCategory","renderMessage","isBot","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","renderSuggestions","selectedCategory","map","question","onClick","Object","entries","key","isLoading","style","animationDelay","ref","type","placeholder","value","onChange","e","target","onKeyPress","shiftKey","preventDefault","disabled","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","_c","$RefreshReg$"],"sources":["C:/Users/eunch/bible-chatbot/frontend/src/components/Chatbot.js"],"sourcesContent":["// Chatbot.js\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport \"./Chatbot.css\";\r\n\r\nconst botProfile = process.env.PUBLIC_URL + \"/bot-avatar.png\";\r\nconst userProfile = process.env.PUBLIC_URL + \"/user-avatar.png\";\r\n\r\nconst categories = {\r\n  relationships: {\r\n    title: \"인간관계\",\r\n    questions: [\r\n      \"가족과의 갈등을 어떻게 풀어야 할까요?\",\r\n      \"친구관계에서 상처받았을 때는 어떻게 해야 할까요?\",\r\n      \"대인관계가 어려울 때 어떻게 해야 할까요?\",\r\n      \"용서하는 것이 어려울 때는 어떻게 해야 할까요?\",\r\n    ],\r\n  },\r\n  faith: {\r\n    title: \"신앙생활\",\r\n    questions: [\r\n      \"기도는 어떻게 하면 좋을까요?\",\r\n      \"성경 읽기가 어려워요.\",\r\n      \"예배생활이 게을러졌어요.\",\r\n      \"하나님의 뜻을 어떻게 알 수 있을까요?\",\r\n    ],\r\n  },\r\n  life: {\r\n    title: \"일상과 결정\",\r\n    questions: [\r\n      \"중요한 결정을 앞두고 있어요.\",\r\n      \"미래가 불안해요.\",\r\n      \"습관을 바꾸고 싶어요.\",\r\n      \"스트레스 관리가 필요해요.\",\r\n    ],\r\n  },\r\n};\r\n\r\nconst initialMessage = {\r\n  id: \"welcome\",\r\n  text: \"안녕하세요! 성경과 삶에 대해 함께 이야기 나누어요. 어떤 주제에 관심이 있으신가요?\",\r\n  sender: \"bot\",\r\n};\r\n\r\nconst Chatbot = () => {\r\n  const [messages, setMessages] = useState([\r\n    {\r\n      id: \"welcome\",\r\n      text: \"안녕하세요! 성경과 삶에 대해 이야기 나누어요. 무엇이든 물어보세요!\",\r\n      sender: \"bot\",\r\n    },\r\n  ]);\r\n  const [input, setInput] = useState(\"\");\r\n  const chatEndRef = useRef(null);\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  const scrollToBottom = () => {\r\n    if (chatEndRef.current) {\r\n      chatEndRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n    }\r\n  };\r\n\r\n  const formatResponse = async (text) => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/chat\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Accept: \"application/json\",\r\n        },\r\n        body: JSON.stringify({ message: text }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.message || \"서버 오류가 발생했습니다.\");\r\n      }\r\n\r\n      const data = await response.json();\r\n      return data.message;\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const handleSend = async (text) => {\r\n    if (!text.trim()) return;\r\n\r\n    const userMessage = { id: Date.now(), text, sender: \"user\" };\r\n    setMessages((prev) => [...prev, userMessage]);\r\n    setInput(\"\");\r\n\r\n    // 🚀 서버 요청 (실제 API 연동)\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/chat\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ message: text }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      const botMessage = {\r\n        id: Date.now() + 1,\r\n        text: data.message,\r\n        sender: \"bot\",\r\n      };\r\n\r\n      setMessages((prev) => [...prev, botMessage]);\r\n\r\n      // ✅ 성경 구절을 개별 메시지로 분리하여 추가\r\n      if (data.bibleVerses) {\r\n        data.bibleVerses.forEach((verse, index) => {\r\n          setMessages((prev) => [\r\n            ...prev,\r\n            {\r\n              id: Date.now() + index + 2,\r\n              text: verse,\r\n              sender: \"bot\",\r\n              isBibleVerse: true,\r\n            },\r\n          ]);\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n      const errorMessage = {\r\n        id: Date.now() + 1,\r\n        text: \"서버 오류가 발생했습니다. 다시 시도해 주세요.\",\r\n        sender: \"bot\",\r\n      };\r\n      setMessages((prev) => [...prev, errorMessage]);\r\n    }\r\n  };\r\n\r\n  const handleCategorySelect = (category) => {\r\n    setSelectedCategory(category);\r\n    const message = {\r\n      id: Date.now(),\r\n      text: `${categories[category].title}에 대해 이야기 나누어 보아요.`,\r\n      sender: \"bot\",\r\n    };\r\n    setMessages((prev) => [...prev, message]);\r\n  };\r\n\r\n  const renderMessage = (message) => {\r\n    const isBot = message.sender === \"bot\";\r\n    return (\r\n      <div key={message.id} className={`message ${message.sender}`}>\r\n        <div className=\"message-avatar\">\r\n          <img\r\n            src={isBot ? botProfile : userProfile}\r\n            alt={`${isBot ? \"Bot\" : \"User\"} Avatar`}\r\n          />\r\n        </div>\r\n        <div className=\"message-content\">{message.text}</div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderSuggestions = () => {\r\n    if (selectedCategory) {\r\n      return (\r\n        <div className=\"question-suggestions\">\r\n          {categories[selectedCategory].questions.map((question, index) => (\r\n            <button\r\n              key={index}\r\n              className=\"suggestion-button\"\r\n              onClick={() => handleSend(question)}\r\n            >\r\n              {question}\r\n            </button>\r\n          ))}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"question-suggestions\">\r\n        {Object.entries(categories).map(([key, category]) => (\r\n          <button\r\n            key={key}\r\n            className=\"suggestion-button\"\r\n            onClick={() => handleCategorySelect(key)}\r\n          >\r\n            {category.title}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-container\">\r\n      <div className=\"chat-header\">\r\n        <div className=\"header-profile\">\r\n          <img src={botProfile} alt=\"Bot Profile\" />\r\n        </div>\r\n        <div className=\"header-text\">\r\n          <h1>성경 챗봇</h1>\r\n          <p>성경과 삶의 이야기를 나눠요</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"chat-messages\">\r\n        {messages.map(renderMessage)}\r\n        {renderSuggestions()}\r\n        {isLoading && (\r\n          <div className=\"loading-indicator\">\r\n            <span></span>\r\n            <span style={{ animationDelay: \"0.2s\" }}></span>\r\n            <span style={{ animationDelay: \"0.4s\" }}></span>\r\n          </div>\r\n        )}\r\n        <div ref={chatEndRef} />\r\n      </div>\r\n\r\n      <div className=\"chat-input-container\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"chat-input\"\r\n          placeholder=\"메시지를 입력하세요...\"\r\n          value={input}\r\n          onChange={(e) => setInput(e.target.value)}\r\n          onKeyPress={(e) => {\r\n            if (e.key === \"Enter\" && !e.shiftKey) {\r\n              e.preventDefault();\r\n              handleSend(input);\r\n            }\r\n          }}\r\n        />\r\n        <button\r\n          className=\"send-button\"\r\n          onClick={() => handleSend(input)}\r\n          disabled={isLoading || !input.trim()}\r\n        >\r\n          <svg\r\n            width=\"20\"\r\n            height=\"20\"\r\n            viewBox=\"0 0 24 24\"\r\n            fill=\"none\"\r\n            stroke=\"currentColor\"\r\n            strokeWidth=\"2\"\r\n            strokeLinecap=\"round\"\r\n            strokeLinejoin=\"round\"\r\n          >\r\n            <path d=\"M22 2L11 13M22 2l-7 20-4-9-9-4 20-7z\" />\r\n          </svg>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chatbot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}