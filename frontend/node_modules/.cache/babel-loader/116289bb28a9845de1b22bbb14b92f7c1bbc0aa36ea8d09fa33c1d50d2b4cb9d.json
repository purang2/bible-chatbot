{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eunch\\\\bible-chatbot\\\\frontend\\\\src\\\\components\\\\Chatbot.js\",\n  _s = $RefreshSig$();\n// Chatbot.js\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./Chatbot.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst botProfile = process.env.PUBLIC_URL + \"/bot-avatar.png\";\nconst userProfile = process.env.PUBLIC_URL + \"/user-avatar.png\";\nconst categories = {\n  relationships: {\n    title: \"인간관계\",\n    questions: [\"가족과의 갈등을 어떻게 풀어야 할까요?\", \"친구관계에서 상처받았을 때는 어떻게 해야 할까요?\", \"대인관계가 어려울 때 어떻게 해야 할까요?\", \"용서하는 것이 어려울 때는 어떻게 해야 할까요?\"]\n  },\n  faith: {\n    title: \"신앙생활\",\n    questions: [\"기도는 어떻게 하면 좋을까요?\", \"성경 읽기가 어려워요.\", \"예배생활이 게을러졌어요.\", \"하나님의 뜻을 어떻게 알 수 있을까요?\"]\n  },\n  life: {\n    title: \"일상과 결정\",\n    questions: [\"중요한 결정을 앞두고 있어요.\", \"미래가 불안해요.\", \"습관을 바꾸고 싶어요.\", \"스트레스 관리가 필요해요.\"]\n  }\n};\nconst initialMessage = {\n  id: \"welcome\",\n  text: \"안녕하세요! 성경과 삶에 대해 함께 이야기 나누어요. 어떤 주제에 관심이 있으신가요?\",\n  sender: \"bot\"\n};\nconst splitMessageAndVerses = text => {\n  const parts = text.split(\"[추천 성경구절]\");\n  if (parts.length !== 2) return {\n    message: text,\n    verses: []\n  };\n  const mainMessage = parts[0].trim();\n  const versesText = parts[1].trim();\n  const verses = [];\n  let match;\n  while ((match = BIBLE_VERSE_PATTERN.exec(versesText)) !== null) {\n    verses.push({\n      index: match[1],\n      reference: match[2],\n      content: match[4]\n    });\n  }\n  return {\n    message: mainMessage,\n    verses\n  };\n};\nconst BibleVerse = ({\n  verse\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"message bot bible-verse\",\n  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"message-avatar\",\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      src: botProfile,\n      alt: \"Bot Avatar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"message-content bible-verse-content\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"verse-reference\",\n      children: verse.reference\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"verse-text\",\n      children: verse.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 66,\n  columnNumber: 3\n}, this);\n_c = BibleVerse;\nconst Chatbot = () => {\n  _s();\n  const [messages, setMessages] = useState([initialMessage]);\n  const [input, setInput] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const chatEndRef = useRef(null);\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const scrollToBottom = () => {\n    if (chatEndRef.current) {\n      chatEndRef.current.scrollIntoView({\n        behavior: \"smooth\"\n      });\n    }\n  };\n  const formatResponse = async text => {\n    try {\n      const response = await fetch(\"http://localhost:5000/chat\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\"\n        },\n        body: JSON.stringify({\n          message: text\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || \"서버 오류가 발생했습니다.\");\n      }\n      const data = await response.json();\n      return data.message;\n    } catch (error) {\n      console.error(\"Error:\", error);\n      throw error;\n    }\n  };\n\n  // handleSend 함수도 다음과 같이 수정\n  const handleSend = async text => {\n    if (!text.trim()) return;\n    const newMessage = {\n      id: Date.now(),\n      text: text,\n      sender: \"user\"\n    };\n    setMessages(prev => [...prev, newMessage]);\n    setInput(\"\");\n    setIsLoading(true);\n    try {\n      const response = await formatResponse(text);\n      const {\n        message,\n        verses\n      } = splitMessageAndVerses(response);\n\n      // 메인 메시지 추가\n      const botMessage = {\n        id: Date.now() + 1,\n        text: message,\n        sender: \"bot\"\n      };\n\n      // 성경 구절들을 별도의 메시지로 추가\n      const verseMessages = verses.map((verse, index) => ({\n        id: Date.now() + 2 + index,\n        verse,\n        sender: \"bot\",\n        type: \"bible-verse\"\n      }));\n      setMessages(prev => [...prev, botMessage, ...verseMessages]);\n    } catch (error) {\n      const errorMessage = {\n        id: Date.now() + 1,\n        text: \"죄송합니다. 응답을 생성하는 중에 문제가 발생했습니다. 다시 시도해 주세요.\",\n        sender: \"bot\"\n      };\n      setMessages(prev => [...prev, errorMessage]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleCategorySelect = category => {\n    setSelectedCategory(category);\n    const message = {\n      id: Date.now(),\n      text: `${categories[category].title}에 대해 이야기 나누어 보아요.`,\n      sender: \"bot\"\n    };\n    setMessages(prev => [...prev, message]);\n  };\n  const renderMessage = message => {\n    if (message.type === \"bible-verse\") {\n      return /*#__PURE__*/_jsxDEV(BibleVerse, {\n        verse: message.verse\n      }, message.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 14\n      }, this);\n    }\n    const isBot = message.sender === \"bot\";\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `message ${message.sender}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-avatar\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: isBot ? botProfile : userProfile,\n          alt: `${isBot ? \"Bot\" : \"User\"} Avatar`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-content\",\n        children: message.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)]\n    }, message.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this);\n  };\n  const renderSuggestions = () => {\n    if (selectedCategory) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-suggestions\",\n        children: categories[selectedCategory].questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"suggestion-button\",\n          onClick: () => handleSend(question),\n          children: question\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-suggestions\",\n      children: Object.entries(categories).map(([key, category]) => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"suggestion-button\",\n        onClick: () => handleCategorySelect(key),\n        children: category.title\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-profile\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: botProfile,\n          alt: \"Bot Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-text\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"\\uC131\\uACBD \\uCC57\\uBD07\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\uC131\\uACBD\\uACFC \\uC0B6\\uC758 \\uC774\\uC57C\\uAE30\\uB97C \\uB098\\uB220\\uC694\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages\",\n      children: [messages.map(renderMessage), renderSuggestions(), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-indicator\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            animationDelay: \"0.2s\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            animationDelay: \"0.4s\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: chatEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"chat-input\",\n        placeholder: \"\\uBA54\\uC2DC\\uC9C0\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694...\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onKeyPress: e => {\n          if (e.key === \"Enter\" && !e.shiftKey) {\n            e.preventDefault();\n            handleSend(input);\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"send-button\",\n        onClick: () => handleSend(input),\n        disabled: isLoading || !input.trim(),\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          width: \"20\",\n          height: \"20\",\n          viewBox: \"0 0 24 24\",\n          fill: \"none\",\n          stroke: \"currentColor\",\n          strokeWidth: \"2\",\n          strokeLinecap: \"round\",\n          strokeLinejoin: \"round\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M22 2L11 13M22 2l-7 20-4-9-9-4 20-7z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 226,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"ft4Yy4KONaoKLMcRG4Rjw3w8g9M=\");\n_c2 = Chatbot;\nexport default Chatbot;\nvar _c, _c2;\n$RefreshReg$(_c, \"BibleVerse\");\n$RefreshReg$(_c2, \"Chatbot\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","botProfile","process","env","PUBLIC_URL","userProfile","categories","relationships","title","questions","faith","life","initialMessage","id","text","sender","splitMessageAndVerses","parts","split","length","message","verses","mainMessage","trim","versesText","match","BIBLE_VERSE_PATTERN","exec","push","index","reference","content","BibleVerse","verse","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","Chatbot","_s","messages","setMessages","input","setInput","isLoading","setIsLoading","selectedCategory","setSelectedCategory","chatEndRef","scrollToBottom","current","scrollIntoView","behavior","formatResponse","response","fetch","method","headers","Accept","body","JSON","stringify","ok","errorData","json","Error","data","error","console","handleSend","newMessage","Date","now","prev","botMessage","verseMessages","map","type","errorMessage","handleCategorySelect","category","renderMessage","isBot","renderSuggestions","question","onClick","Object","entries","key","style","animationDelay","ref","placeholder","value","onChange","e","target","onKeyPress","shiftKey","preventDefault","disabled","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","_c2","$RefreshReg$"],"sources":["C:/Users/eunch/bible-chatbot/frontend/src/components/Chatbot.js"],"sourcesContent":["// Chatbot.js\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport \"./Chatbot.css\";\r\n\r\nconst botProfile = process.env.PUBLIC_URL + \"/bot-avatar.png\";\r\nconst userProfile = process.env.PUBLIC_URL + \"/user-avatar.png\";\r\n\r\nconst categories = {\r\n  relationships: {\r\n    title: \"인간관계\",\r\n    questions: [\r\n      \"가족과의 갈등을 어떻게 풀어야 할까요?\",\r\n      \"친구관계에서 상처받았을 때는 어떻게 해야 할까요?\",\r\n      \"대인관계가 어려울 때 어떻게 해야 할까요?\",\r\n      \"용서하는 것이 어려울 때는 어떻게 해야 할까요?\",\r\n    ],\r\n  },\r\n  faith: {\r\n    title: \"신앙생활\",\r\n    questions: [\r\n      \"기도는 어떻게 하면 좋을까요?\",\r\n      \"성경 읽기가 어려워요.\",\r\n      \"예배생활이 게을러졌어요.\",\r\n      \"하나님의 뜻을 어떻게 알 수 있을까요?\",\r\n    ],\r\n  },\r\n  life: {\r\n    title: \"일상과 결정\",\r\n    questions: [\r\n      \"중요한 결정을 앞두고 있어요.\",\r\n      \"미래가 불안해요.\",\r\n      \"습관을 바꾸고 싶어요.\",\r\n      \"스트레스 관리가 필요해요.\",\r\n    ],\r\n  },\r\n};\r\n\r\nconst initialMessage = {\r\n  id: \"welcome\",\r\n  text: \"안녕하세요! 성경과 삶에 대해 함께 이야기 나누어요. 어떤 주제에 관심이 있으신가요?\",\r\n  sender: \"bot\",\r\n};\r\n\r\nconst splitMessageAndVerses = (text) => {\r\n  const parts = text.split(\"[추천 성경구절]\");\r\n  if (parts.length !== 2) return { message: text, verses: [] };\r\n\r\n  const mainMessage = parts[0].trim();\r\n  const versesText = parts[1].trim();\r\n\r\n  const verses = [];\r\n  let match;\r\n\r\n  while ((match = BIBLE_VERSE_PATTERN.exec(versesText)) !== null) {\r\n    verses.push({\r\n      index: match[1],\r\n      reference: match[2],\r\n      content: match[4],\r\n    });\r\n  }\r\n\r\n  return { message: mainMessage, verses };\r\n};\r\n\r\nconst BibleVerse = ({ verse }) => (\r\n  <div className=\"message bot bible-verse\">\r\n    <div className=\"message-avatar\">\r\n      <img src={botProfile} alt=\"Bot Avatar\" />\r\n    </div>\r\n    <div className=\"message-content bible-verse-content\">\r\n      <span className=\"verse-reference\">{verse.reference}</span>\r\n      <p className=\"verse-text\">{verse.content}</p>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nconst Chatbot = () => {\r\n  const [messages, setMessages] = useState([initialMessage]);\r\n  const [input, setInput] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [selectedCategory, setSelectedCategory] = useState(null);\r\n  const chatEndRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  const scrollToBottom = () => {\r\n    if (chatEndRef.current) {\r\n      chatEndRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n    }\r\n  };\r\n\r\n  const formatResponse = async (text) => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/chat\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Accept: \"application/json\",\r\n        },\r\n        body: JSON.stringify({ message: text }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.message || \"서버 오류가 발생했습니다.\");\r\n      }\r\n\r\n      const data = await response.json();\r\n      return data.message;\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // handleSend 함수도 다음과 같이 수정\r\n  const handleSend = async (text) => {\r\n    if (!text.trim()) return;\r\n\r\n    const newMessage = {\r\n      id: Date.now(),\r\n      text: text,\r\n      sender: \"user\",\r\n    };\r\n\r\n    setMessages((prev) => [...prev, newMessage]);\r\n    setInput(\"\");\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      const response = await formatResponse(text);\r\n      const { message, verses } = splitMessageAndVerses(response);\r\n\r\n      // 메인 메시지 추가\r\n      const botMessage = {\r\n        id: Date.now() + 1,\r\n        text: message,\r\n        sender: \"bot\",\r\n      };\r\n\r\n      // 성경 구절들을 별도의 메시지로 추가\r\n      const verseMessages = verses.map((verse, index) => ({\r\n        id: Date.now() + 2 + index,\r\n        verse,\r\n        sender: \"bot\",\r\n        type: \"bible-verse\",\r\n      }));\r\n\r\n      setMessages((prev) => [...prev, botMessage, ...verseMessages]);\r\n    } catch (error) {\r\n      const errorMessage = {\r\n        id: Date.now() + 1,\r\n        text: \"죄송합니다. 응답을 생성하는 중에 문제가 발생했습니다. 다시 시도해 주세요.\",\r\n        sender: \"bot\",\r\n      };\r\n      setMessages((prev) => [...prev, errorMessage]);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleCategorySelect = (category) => {\r\n    setSelectedCategory(category);\r\n    const message = {\r\n      id: Date.now(),\r\n      text: `${categories[category].title}에 대해 이야기 나누어 보아요.`,\r\n      sender: \"bot\",\r\n    };\r\n    setMessages((prev) => [...prev, message]);\r\n  };\r\n\r\n  const renderMessage = (message) => {\r\n    if (message.type === \"bible-verse\") {\r\n      return <BibleVerse key={message.id} verse={message.verse} />;\r\n    }\r\n\r\n    const isBot = message.sender === \"bot\";\r\n    return (\r\n      <div key={message.id} className={`message ${message.sender}`}>\r\n        <div className=\"message-avatar\">\r\n          <img\r\n            src={isBot ? botProfile : userProfile}\r\n            alt={`${isBot ? \"Bot\" : \"User\"} Avatar`}\r\n          />\r\n        </div>\r\n        <div className=\"message-content\">{message.text}</div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderSuggestions = () => {\r\n    if (selectedCategory) {\r\n      return (\r\n        <div className=\"question-suggestions\">\r\n          {categories[selectedCategory].questions.map((question, index) => (\r\n            <button\r\n              key={index}\r\n              className=\"suggestion-button\"\r\n              onClick={() => handleSend(question)}\r\n            >\r\n              {question}\r\n            </button>\r\n          ))}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"question-suggestions\">\r\n        {Object.entries(categories).map(([key, category]) => (\r\n          <button\r\n            key={key}\r\n            className=\"suggestion-button\"\r\n            onClick={() => handleCategorySelect(key)}\r\n          >\r\n            {category.title}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-container\">\r\n      <div className=\"chat-header\">\r\n        <div className=\"header-profile\">\r\n          <img src={botProfile} alt=\"Bot Profile\" />\r\n        </div>\r\n        <div className=\"header-text\">\r\n          <h1>성경 챗봇</h1>\r\n          <p>성경과 삶의 이야기를 나눠요</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"chat-messages\">\r\n        {messages.map(renderMessage)}\r\n        {renderSuggestions()}\r\n        {isLoading && (\r\n          <div className=\"loading-indicator\">\r\n            <span></span>\r\n            <span style={{ animationDelay: \"0.2s\" }}></span>\r\n            <span style={{ animationDelay: \"0.4s\" }}></span>\r\n          </div>\r\n        )}\r\n        <div ref={chatEndRef} />\r\n      </div>\r\n\r\n      <div className=\"chat-input-container\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"chat-input\"\r\n          placeholder=\"메시지를 입력하세요...\"\r\n          value={input}\r\n          onChange={(e) => setInput(e.target.value)}\r\n          onKeyPress={(e) => {\r\n            if (e.key === \"Enter\" && !e.shiftKey) {\r\n              e.preventDefault();\r\n              handleSend(input);\r\n            }\r\n          }}\r\n        />\r\n        <button\r\n          className=\"send-button\"\r\n          onClick={() => handleSend(input)}\r\n          disabled={isLoading || !input.trim()}\r\n        >\r\n          <svg\r\n            width=\"20\"\r\n            height=\"20\"\r\n            viewBox=\"0 0 24 24\"\r\n            fill=\"none\"\r\n            stroke=\"currentColor\"\r\n            strokeWidth=\"2\"\r\n            strokeLinecap=\"round\"\r\n            strokeLinejoin=\"round\"\r\n          >\r\n            <path d=\"M22 2L11 13M22 2l-7 20-4-9-9-4 20-7z\" />\r\n          </svg>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chatbot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}